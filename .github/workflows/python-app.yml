name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # Lint only project files, ignore venv and system packages
          flake8 . \
            --count \
            --select=E9,F63,F7,F82 \
            --show-source \
            --statistics \
            --exclude=venv,.git,__pycache__,.mypy_cache,.pytest_cache
          
          # Exit-zero treats all errors as warnings (wonâ€™t fail the pipeline)
          flake8 . \
            --count \
            --exit-zero \
            --max-complexity=10 \
            --max-line-length=127 \
            --statistics \
            --exclude=venv,.git,__pycache__,.mypy_cache,.pytest_cache

      - name: Test with pytest
        run: |
          pytest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to Production
        run: |
          echo "Starting Deployment..."
          # Replace this echo with actual deployment code
          # Example:
          # ssh user@my_server "cd /path/to/project && git pull && systemctl restart my-service"
